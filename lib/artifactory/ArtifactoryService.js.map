{"version":3,"sources":["../../src/artifactory/ArtifactoryService.js"],"names":["require","ArtifactoryS3BucketService","ArtifactoryLayerService","ArtifactoryService","serverlessLayersConfig","zipService","plugin","artifactoryS3BucketService","artifactoryLayerService","settings","compatibleRuntimes","tempArtifactoryZipFileName","initService","console","log","initServices","downloadLayerHashMappingJsonFile","layerVersionArn","uploadLayerZipFile","publishLayerFromArtifactory","uploadLayerHashMappingFile"],"mappings":";;;;;;;;;;;;;;;;;eAAuCA,OAAO,CAAC,8BAAD,C;IAAtCC,0B,YAAAA,0B;;gBAC4BD,OAAO,CAAC,2BAAD,C;IAAnCE,uB,aAAAA,uB;;IAEKC,kB;AAEX,8BAAYC,sBAAZ,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwD;AAAA;AACtD,SAAKC,0BAAL,GAAkC,IAAIN,0BAAJ,CAA+BG,sBAA/B,CAAlC;AACA,SAAKI,uBAAL,GAA+B,IAAIN,uBAAJ,CAA4BE,sBAA5B,EAAoDE,MAAM,CAACG,QAAP,CAAgBC,kBAApE,CAA/B;AACA,SAAKC,0BAAL,GAAkCP,sBAAsB,CAACO,0BAAzD;AACA,SAAKN,UAAL,GAAkBA,UAAlB;AACD;;;;mCAEc;AACb,WAAKE,0BAAL,CAAgCK,WAAhC;AACA,WAAKJ,uBAAL,CAA6BI,WAA7B;AACD;;;;;;;;;;AAGCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,uEAAZ;AACA,qBAAKC,YAAL;;uBAE4B,KAAKR,0BAAL,CAAgCS,gCAAhC,E;;;AAAxBC,gBAAAA,e;;oBAECA,e;;;;;AACHJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,8FAAZ;;uBACM,KAAKT,UAAL,YAAwB,KAAKM,0BAA7B,C;;;;uBACA,KAAKJ,0BAAL,CAAgCW,kBAAhC,E;;;;uBACkB,KAAKV,uBAAL,CAA6BW,2BAA7B,E;;;AAAxBF,gBAAAA,e;;uBACM,KAAKV,0BAAL,CAAgCa,0BAAhC,CAA2DH,eAA3D,C;;;iDAGDA,e","sourcesContent":["const { ArtifactoryS3BucketService } = require('./ArtifactoryS3BucketService');\nconst { ArtifactoryLayerService } = require('./ArtifactoryLayerService');\n\nexport class ArtifactoryService {\n\n  constructor(serverlessLayersConfig, zipService, plugin) {\n    this.artifactoryS3BucketService = new ArtifactoryS3BucketService(serverlessLayersConfig);\n    this.artifactoryLayerService = new ArtifactoryLayerService(serverlessLayersConfig, plugin.settings.compatibleRuntimes);\n    this.tempArtifactoryZipFileName = serverlessLayersConfig.tempArtifactoryZipFileName;\n    this.zipService = zipService;\n  }\n\n  initServices() {\n    this.artifactoryS3BucketService.initService();\n    this.artifactoryLayerService.initService();\n  }\n\n  async updateLayerFromArtifactory() {\n    console.log('[ LayersPlugin - Artifacts ]: going to update layer using artifactory');\n    this.initServices();\n\n    let layerVersionArn = await this.artifactoryS3BucketService.downloadLayerHashMappingJsonFile();\n\n    if (!layerVersionArn) {\n      console.log('[ LayersPlugin - Artifacts ]: hash does not exist in the artifactory, going to add new layer');\n      await this.zipService.package(this.tempArtifactoryZipFileName);\n      await this.artifactoryS3BucketService.uploadLayerZipFile();\n      layerVersionArn = await this.artifactoryLayerService.publishLayerFromArtifactory();\n      await this.artifactoryS3BucketService.uploadLayerHashMappingFile(layerVersionArn);\n    }\n\n    return layerVersionArn;\n  }\n}\n"],"file":"ArtifactoryService.js"}